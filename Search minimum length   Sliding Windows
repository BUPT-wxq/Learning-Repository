给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的连续子数组，并返回其长度。如果不存在符合条件的连续子数组，返回 0。

示例: 

输入: s = 7, nums = [2,3,1,2,4,3]
输出: 2
解释: 子数组 [4,3] 是该条件下的长度最小的连续子数组。

func minSubArrayLen(s int, nums []int) int{
	n := len(nums)
	ans:=0
	left := 0;
	sum := 0;
	for i := 0; i < n; i++ {
	   sum += nums[i];
	   for sum >= s {
	   	   if ans==0{
	   	   	  ans=i+1-left
	   	   }
	   	   if i+1-left<ans{
	   	   	  ans=i+1-left
	   	   }
	   	   sum -= nums[left];
	   	   left++
	   }
	}
	return ans
}
