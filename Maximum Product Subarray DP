152. 乘积最大子数组
给你一个整数数组 nums ，请你找出数组中乘积最大的连续子数组（该子数组中至少包含一个数字），并返回该子数组所对应的乘积。

 

示例 1:

输入: [2,3,-2,4]
输出: 6
解释: 子数组 [2,3] 有最大乘积 6。
示例 2:

输入: [-2,0,-1]
输出: 0
解释: 结果不能为 2, 因为 [-2,-1] 不是子数组。
class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        dp=[0]*len(nums)
        mininum= [0] * len(nums)
        dp[0]=nums[0]
        mininum[0]=nums[0]
        for i in range (1,len(nums)):
            dp[i] = max(nums[i], dp[i - 1] * nums[i],mininum[i-1]*nums[i])
            mininum[i]=min(nums[i], mininum[i - 1] * nums[i], dp[i - 1] * nums[i])
        Max=dp[0]
        for i in range(1,len(nums)):
            if Max<dp[i]:
                Max = dp[i]
        return Max
